pipeline:

#  docker-test:
#    group: build
#    image: plugins/docker
#    storage_driver: vfs
#    repo: omelhoro1/language-lessons
#    tags: test
#    secrets: [ docker_username, docker_password, datomic_user, datomic_pass ]
#    build_args_from_env: [ datomic_user, datomic_pass]
#    dry_run: true
#    dockerfile: Dockerfile.test
#    when:
#      branch: master

  docker-test:
    group: build
    image: docker
    secrets: [ docker_username, docker_password, datomic_user, datomic_pass ]
    commands:
      - docker build -f Dockerfile.test .  --build-arg DATOMIC_PASS=$DATOMIC_PASS --build-arg DATOMIC_USER=$DATOMIC_USER
    when:
      branch: master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  docker:
    group: build
    image: docker
    secrets: [ docker_username, docker_password, datomic_user, datomic_pass ]
    commands:
      - docker build .  --build-arg DATOMIC_PASS=$DATOMIC_PASS --build-arg DATOMIC_USER=$DATOMIC_USER
      - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - docker push omelhoro1/language-lessons
    when:
      branch: master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


#  docker:
#    group: build
#    image: plugins/docker
#    storage_driver: vfs
#    repo: omelhoro1/language-lessons
#    build_args_from_env: [ datomic_user, datomic_pass]
#    secrets: [ docker_username, docker_password, datomic_user, datomic_pass ]
#    when:
#      branch: master

  deploy:
    image: drillster/drone-rsync
    user: captain
    hosts: [ "software-unchained.com" ]
    port: 22
    target: /tmp/language-lessons-${DRONE_COMMIT}/
    include:
      - "docker-compose.yml"
    exclude:
      - "**.*"
    delete: false
    secrets: [ rsync_key ]
    script:
      - docker-compose -f /tmp/language-lessons-${DRONE_COMMIT}/docker-compose.yml pull
      - docker-compose -f /tmp/language-lessons-${DRONE_COMMIT}/docker-compose.yml -p language-lessons up -d
    when:
      branch: master
